-import sys
-ls
-import sys
-import sys
-2**30
-2**30-1
-ry:\n	pass\nexcept Exception, e:\n	raise\nelse:\n	pass\nfinally:\n	pass
-k
-ls
-dir()
-os
-sys
-2**16
-import urlparse
-urlparse.urlparse("http://o-o---preferred---sn-o3o-qxae---v9---lscache7.c.youtube.com/videoplayback?upn=acbcE27ExWE&sparams=cp%2Cid%2Cip%2Cipbits%2Citag%2Cratebypass%2Csource%2Cupn%2Cexpire&fexp=907605%2C913560%2C927104%2C922401%2C920704%2C912806%2C927201%2C913546%2C913556%2C925109%2C919003%2C912706%2C900816&key=yt1&expire=1350199433&itag=18&ipbits=8&sver=3&ratebypass=yes&mt=1350176171&ip=180.149.52.3&mv=m&source=youtube&ms=au&cp=U0hURVFUV19ITUNONF9JTkFFOnE2SXhkeHpJY0FM&id=o%3AAJW8x0u780M26IBNBg-lWyt1M0IxEV77jbAU-qLsz271&type=video/mp4;%20codecs=%22avc1.42001E,%20mp4a.40.2%22&fallback_host=tc.v9.cache7.c.youtube.com&signature=14C1E3948AF0AC5D97E12B652FB98E2888C4A23F.803FD74A80874CB0487E67B34B86B5FE3CDD47BD&keepalive=yes&title=Aankhon%20Kay%20Sagar%2C%20Shafqat%20Amanat%20Ali%2C%20Coke%20Studio%20Pakistan%2C%20Season%202\n")
-urlparse.urlparse("http://o-o---preferred---sn-o3o-qxae---v9---lscache7.c.youtube.com/videoplayback?upn=acbcE27ExWE&sparams=cp%2Cid%2Cip%2Cipbits%2Citag%2Cratebypass%2Csource%2Cupn%2Cexpire&fexp=907605%2C913560%2C927104%2C922401%2C920704%2C912806%2C927201%2C913546%2C913556%2C925109%2C919003%2C912706%2C900816&key=yt1&expire=1350199433&itag=18&ipbits=8&sver=3&ratebypass=yes&mt=1350176171&ip=180.149.52.3&mv=m&source=youtube&ms=au&cp=U0hURVFUV19ITUNONF9JTkFFOnE2SXhkeHpJY0FM&id=o%3AAJW8x0u780M26IBNBg-lWyt1M0IxEV77jbAU-qLsz271&type=video/mp4;%20codecs=%22avc1.42001E,%20mp4a.40.2%22&fallback_host=tc.v9.cache7.c.youtube.com&signature=14C1E3948AF0AC5D97E12B652FB98E2888C4A23F.803FD74A80874CB0487E67B34B86B5FE3CDD47BD&keepalive=yes&title=Aankhon%20Kay%20Sagar%2C%20Shafqat%20Amanat%20Ali%2C%20Coke%20Studio%20Pakistan%2C%20Season%202")
-r=_
-r.query
-r.scheme
-r.path
-r.username
-r.netloc
-r.params
-r.query
-r.geturl()
-urlparse.parse_qs(r.query)
-import json
-json.pprint
-json.encode
-json.dumps(urlparse.parse_qs(r.query))
-print json.dumps(urlparse.parse_qs(r.query))
-print json.dumps(urlparse.parse_qs(r.query),indent=2)
-print json.dumps(urlparse.parse_qs(r.query),indent=4)
-print json.dumps(urlparse.parse_qs;(r.query),indent=4)
-print json.dumps(urlparse.parse_qsl(r.query),indent=4)
-print json.dumps(urlparse.parse_qs(r.query),indent=4)
-p=(urlparse.parse_qs(r.query))
-p
-dict(k,p[k][0] for k in p.keys())
-dict((k,p[k][0]) for k in p.keys())
-p2dict((k,p[k][0]) for k in p.keys())
-p2=dict((k,p[k][0]) for k in p.keys())
-print json.dumps(p2,indent=4)
-import urlparse
-r=urlparse.urlparse("http://o-o---preferred---sn-o3o-qxae---v9---lscache7.c.youtube.com/videoplayback?upn=acbcE27ExWE&sparams=cp%2Cid%2Cip%2Cipbits%2Citag%2Cratebypass%2Csource%2Cupn%2Cexpire&fexp=907605%2C913560%2C927104%2C922401%2C920704%2C912806%2C927201%2C913546%2C913556%2C925109%2C919003%2C912706%2C900816&key=yt1&expire=1350199433&itag=18&ipbits=8&sver=3&ratebypass=yes&mt=1350176171&ip=180.149.52.3&mv=m&source=youtube&ms=au&cp=U0hURVFUV19ITUNONF9JTkFFOnE2SXhkeHpJY0FM&id=o%3AAJW8x0u780M26IBNBg-lWyt1M0IxEV77jbAU-qLsz271&type=video/mp4;%20codecs=%22avc1.42001E,%20mp4a.40.2%22&fallback_host=tc.v9.cache7.c.youtube.com&signature=14C1E3948AF0AC5D97E12B652FB98E2888C4A23F.803FD74A80874CB0487E67B34B86B5FE3CDD47BD&keepalive=yes&title=Aankhon%20Kay%20Sagar%2C%20Shafqat%20Amanat%20Ali%2C%20Coke%20Studio%20Pakistan%2C%20Season%202")
-r.geturl()
-r.query
-p=urlparse.parse_qs(r.query)
-p2=dict((k,p[k][0]) for k in p.keys())
-p2
-p3={'url':r.geturl(), "data": p2}
-print json.dumps(p3,indent=4)
-import json
-print json.dumps(p3,indent=4)
-def dejavu(n):
-	d=[]
-	for i in xrange(n):
-def f(x):
-	yield 2; yield 3;
-f(0)
-g=_
-g.next()
-count
-import itertools
-itertools.count
-itertools.count.__doc__
-109853832828
-109853832828/(1<<32)
-a=[1,5]
-for i in xrange(20):
-	a.append((a[-1]*2+a[-2]*3)%11)
-a
-b=[2,3]
-for i in xrange(20):
-	b.append((b[-1]*3+a[-2]*1)%7)
-b
-b=[2,3]
-for i in xrange(20):
-	b.append((b[-1]*1+a[-2]*3)%7)
-b
-b=[2,3]
-for i in xrange(20):
-	b.append((b[-1]*1+a[-2]*3)%7)
-for i in xrange(20):
-	b.append((b[-1]*3+b[-2]*1)%7)
-b
-71+38+40
-import math
-[int((int(math.sqrt(8*n))+1)/2) for n in xrange(1,20)]
-1008859-998827
-_/264
-(1008859-998827)/264.0
-class GolombSeq\n  def initialize\n    init\n  end\n  \n  def init\n    @sig = [1, 3]\n    @idx = 1\n  end\n\n  def g n\n    while @sig.last < n\n      @sig << @sig.last + search_gn(@idx + @sig.size)\n      return (@idx + @sig.size - 1) if @sig.last >= n\n    end\n    return gn n\n  rescue => e\n    puts ">>> SIG SIZE : #{@sig.size} / n : #{n}"\n    p e\n    return 0\n  end\n  \n  def sg3 n\n    sum = 0\n    (1...n).each do |x|\n      sum += g(x**3)\n    end\n    sum\n  end\n    \n  private\n  def search_gn n\n    while @sig.first < n\n      @idx += 1\n      @sig.shift\n    end\n    @idx\n  end\n  \n  def gn n\n    @sig.size.times {|x|\n      return @idx + x if @sig[x] >= n\n    }\n  end\n  \nend\n\nseq = GolombSeq.new\n\nrequire "benchmark"\nBenchmark.bm do |rep|\n  #rep.report {puts seq.g 1000}\n  #seq.init\n  #rep.report {puts seq.g 1000000}\n  #seq.init\n  #rep.report {puts seq.sg3 1000}\n  #seq.init\n  rep.report {puts seq.sg3 1000000}\nend
-hi
-import itertools
-itertools.comb
-itertools.combination
-itertools.combinations
-itertools.combinations.__doc__
-list(itertools.combinations([1 2 3 4 5],3))
-list(itertools.combinations([1,2,3,4,5],3))
-1<<51
-list(itertools.combinations(xrange(5),3))
-dict.haskey
-dict.has_key
-list(itertools.combinations((1,2,3,4,5),3))
-1|2
-reduce
-reduce.__doc__
-reduce((lambda x,y:x*y),xrange(1,5))
-list.remove
-a=[1,2]
-a.remove(1)
-a
-import os
-os.cwd
-os.cd
-os.cur
-os.cur_dir
-os.curdir
-import libsvm.python.svnutils
-import libsvm.python.svmutils
-import libsvm.python.svm
-os.system('ls')
-import os
-os.system('ls')
-os.chdir("C:\\Users\\Rajat\\Dropbox\\study\\sem7\\CSL865\\ass2\\libsvm")
-os.chdir("C:\\Users\\Rajat\\Dropbox\\study\\sem7\\CSL865\\")
-os.chdir("C:\\Users\\Rajat\\Dropbox\\study\\sem7\\CSL865")
-os.chdir('ass2')
-os.system('ls')
-import libsvm.python.svm
-import libsvm.python.svmutils
-import svmutils
-import svmutil
-unique
-set
